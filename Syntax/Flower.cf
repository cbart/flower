--  Copyright (C) 2011 Cezary Bartoszuk
--  cbart@students.mimuw.edu.pl

--  This program is free software; you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation; either version 2 of the License, or
--  (at your option) any later version.

--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.

entrypoints Expr ;

-- Declarations

ADFor   . AbstractDeclaration ::= Quantifier Declaration ;
ADLet   . AbstractDeclaration ::= Declaration ;
QForAll . Quantifier  ::= "for" [Bound] ;
DLet    . Declaration ::= "let" Ident ":" Type "=" Expr ;

-- Expressions

ELoop   . Expr ::= "loop" ;
ELambda . Expr ::= "fun" [Arg] "->" Expr "end" ;
EIf     . Expr ::= "if" Expr "then" Expr "else" Expr "end" ;
EApp    . Expr ::= Expr Expr1 ;
EIdent  . Expr ::= Ident ;
coercions Expr 1 ;

-- Arguments

AIdent  . Arg ::= Ident ;
(:[])   . [Arg] ::= Arg ;
(:)     . [Arg] ::= Arg [Arg] ;

-- Types

TId     . Type ::= Ident ;
TFun    . Type ::= Type1 "->" Type ;
coercions Type 1 ;

-- Kinds

KId     . Kind ::= "*" ;
KFun    . Kind ::= Kind1 "->" Kind ;
coercions Kind 1 ;

-- Type bounds

Bound   . Bound ::= Ident ":" Kind ;
(:[])   . [Bound] ::= Bound ;
(:)     . [Bound] ::= Bound "," [Bound] ;
